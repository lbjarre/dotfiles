#!/bin/sh
# Get the current weather from wttr.in, with some caching.

# Cache location.
: "${WTTR_CACHE:="${HOME}/.cache/wttr/cached"}"
# Cache ttl in seconds.
: "${WTTR_CACHE_TTL:=300}"
# Format string for the wttr API. See the Github page for more info about the
# directives: https://github.com/chubin/wttr.in#one-line-output
: "${WTTR_FMT:="%c+%t+(%f)+%p"}"
# URL to the wttr API.
: "${WTTR_URL:="http://wttr.in/?format=${WTTR_FMT}"}"

# Print line to stderr.
stderr() { echo "$@" >&2; }

# Emit a debug line to stderr, if WTTR_DEBUG is set.
# Run with `WTTR_DEBUG=1` to print debug logs.
debug() { ( [ -n "${WTTR_DEBUG}" ] && stderr "$@" ) || true; }

# Fetch the current timestamp, in unix seconds.
now() { date +%s; }

# Runs setup.
setup() {
    # curl required, check that it's installed.
    if ! command -v curl > /dev/null; then
        stderr "error: missing curl"
        return 1
    fi

    # Create cache dir if not present.
    cache_dir=$(dirname "${WTTR_CACHE}")
    if [ ! -d "${cache_dir}" ]; then
        debug "creating missing cache dir dir=${cache_dir}"
        mkdir -p "${cache_dir}"
    fi
    debug "setup: cache-file=${WTTR_CACHE} cache-ttl=${WTTR_CACHE_TTL}"
}


# Reads value from cache from stdin. Prints the result to stdout if its a cache hit.
read_cache() {
    # Two-lined input, first line being the time the result was fetched at and
    # the second the actual output.
    read -r fetched_at
    read -r result

    # Compare the cached fetch time to now and see if it's still valid.
    ts_now=$(now)
    diff=$((ts_now - fetched_at))
    hit=$((diff < WTTR_CACHE_TTL))
    debug "cache: hit=${hit} fetched-at=${fetched_at} now=${ts_now} diff=${diff}"

    # Exit non-zero if this was not a cache hit, else print the result to stdout.
    [ "${hit}" -eq 0 ] && return 255
    echo "${result}"
}

# Writes the value $1 in the cache format to stdout.
write_cache() {
    read -r weather
    printf "%s\n%s\n" "$(now)" "${weather}"
}

# Run HTTP request to wttr.
fetch_wttr() {
    debug "fetch: url=${WTTR_URL}"
    curl "${WTTR_URL}" 2>/dev/null
}

main() {
    # Run setup.
    setup || exit 1
    # Check first if cached value is still live.
    [ -f "${WTTR_CACHE}" ] && read_cache < "${WTTR_CACHE}" && exit 0
    # Else, fetch from wttr.in.
    weather="$(fetch_wttr)"
    # Write result to cache.
    echo "${weather}" | write_cache > "${WTTR_CACHE}"
    # Echo result to stdout.
    echo "${weather}"
}

main < /dev/null
